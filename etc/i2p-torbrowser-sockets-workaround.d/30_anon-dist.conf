## Copyright (C)
## See the file COPYING for copying conditions.

## Please use "/etc/i2p-torbrowser-sockets-workaround.d/50_user.conf" for your custom
## configuration, which will override the defaults found here.
## When i2p-torbrowser-sockets-workaround is updated, this file may be overwritten

## Do not try to execute this file. Files in folder /etc/i2p-torbrowser-sockets-workaround.d
## are `source`d in lexical order by the i2p-torbrowser-sockets-workaround package.

## bash fragment

################################
# systemd-unit-files-generator #
################################

## /usr/share/i2p-torbrowser-sockets-workaround/systemd-unit-files-generator parses this.

## Usage:
## 1) Create and extend config file /etc/i2p-torbrowser-sockets-workaround.d/50_user.conf
## 2) Run /usr/share/i2p-torbrowser-sockets-workaround/systemd-unit-files-generator

file_port_tuples+=" port#4444:4444 " ## system i2p default HttpPort
## Redirect Whonix-Workstation port 4447 to Whonix-Gateway port 4447 and so forth.
file_port_tuples+=" port#4447:4447 " ## system i2p default SocksPort


## Create a unix domain socket files such as
## /var/run/i2p-torbrowser-sockets-workaround/127.0.0.1_4447.sock and forward those
## to $GATEWAY_IP:9150 etc. See also:
## https://phabricator.whonix.org/T192
file_port_tuples+=" /var/run/i2p-torbrowser-sockets-workaround/127.0.0.1_4444.sock#4444 "
file_port_tuples+=" /var/run/i2p-torbrowser-sockets-workaround/127.0.0.1_4447.sock#4447 "

## system i2p default SocksSocket is /var/run/tor/socks
## redirect Whonix-Workstation unix domain socket file /var/run/tor/socks to Whonix-Gateway port 4447
file_port_tuples+=" /var/run/i2p/http#4444 "
file_port_tuples+=" /var/run/i2p/socks#4447 "

## Debian /usr/share/tor/tor-service-defaults-torrc uses '/var/run/tor/control' i2p ControlSocket
## Redirect Whonix-Workstation unix domain socket file /var/run/tor/control to Whonix-Gateway port 9051
#file_port_tuples+=" /var/run/tor/control#9051 "

######################
# socat-unix-sockets #
######################

## /usr/lib/i2p-torbrowser-sockets-workaround/socat-unix-sockets parses this.
## Start and stop is up to the i2p-torbrowser-sockets-workaround systemd service.

## GATEWAY_IP: No need to set GATEWAY_IP. (Gets set by calling script
## /usr/lib/i2p-torbrowser-sockets-workaround/socat-unix-sockets.)

## Usage:
## sudo service i2p-torbrowser-sockets-workaround stop
## sudo service i2p-torbrowser-sockets-workaround start
## sudo service i2p-torbrowser-sockets-workaround restart
## sudo service i2p-torbrowser-sockets-workaround status

#[ -n "$pre_command" ] || pre_command=""

#$pre_command socat TCP-LISTEN:9998,fork,bind=127.0.0.1 TCP:$GATEWAY_IP:9998 &

#$pre_command socat -t100 UNIX-LISTEN:/var/run/folder-name/127.0.0.1_9999.sock,mode=777,reuseaddr,fork TCP:127.0.0.1:9999 &

#########
## Test #
#########

## To test /var/run/tor/socks, you could use:
## sudo --non-interactive -u debian-tor socat - UNIX-CONNECT:/var/run/tor/socks
## Then type:
## GET
## <enter>
## The expected reply includes 'i2p is not an HTTP Proxy'.

## To test /var/run/tor/control, you could use:
## sudo --non-interactive -u debian-tor socat - UNIX-CONNECT:/var/run/tor/control
## Then type:
## SIGNAL NEWNYM
## <enter>
## 250 OK
