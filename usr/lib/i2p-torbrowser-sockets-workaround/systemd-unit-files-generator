#!/bin/bash

## Copyright (C)
## See the file COPYING for copying conditions.

set -e

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

## Change to either system or package source code root folder.
cd "$MYDIR"
cd ..
cd ..
cd ..

shopt -s nullglob
for i in etc/i2p-torbrowser-sockets-workaround.d/*.conf rw/i2p-torbrowser-sockets-workaround.d/*.conf; do
   bash_n_exit_code="0"
   bash_n_output="$(bash -n "$i" 2>&1)" || { bash_n_exit_code="$?" ; true; };
   if [ ! "$bash_n_exit_code" = "0" ]; then
      echo "Invalid config file: $i
bash_n_exit_code: $bash_n_exit_code
bash_n_output:
$bash_n_output" >&2
      exit 1
   fi
   source "$i"
done

if [ "$BASH_SOURCE" = "/usr/lib/i2p-torbrowser-sockets-workaround/systemd-unit-files-generator" ]; then
   [ -n "$system_run" ] || system_run="true"
   [ -n "$generated_comment" ] || generated_comment="This file was auto generated by $BASH_SOURCE at system runtime."
else
   [ -n "$system_run" ] || system_run="false"
   [ -n "$generated_comment" ] || generated_comment="This file was auto generated by $BASH_SOURCE at package build time."
fi

mkdir -p usr/share/lintian/overrides

## Create lintian override file header.
echo "\
## Copyright (C) 2017 
## See the file COPYING for copying conditions.

## $generated_comment

## Dummy script does not need a man page. Original man page still available.
i2p-torbrowser-sockets-workaround: binary-without-manpage usr/sbin/i2p.anondist

## false positive lintian warning for static systemd unit file
## http://lists.alioth.debian.org/pipermail/pkg-systemd-maintainers/2017-March/014380.html
## https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=832771#32" > usr/share/lintian/overrides/i2p-torbrowser-sockets-workaround

## Delete previously automatically generated systemd unit files by this script.
rm -f lib/systemd/system/i2p-torbrowser-sockets-workaround_autogen_*

for item in $file_port_tuples ; do
   file_item="${item%#*}"
   port_tuples="${item##*#}"

   source_port="${port_tuples%:*}"
   destination_port="${port_tuples##*:}"

   destination_where="10.152.152.10:${destination_port}"

   if [ "$file_item" = "port" ]; then
      listen_where="127.0.0.1:$source_port"
      file_name="port_${source_port}"

   else
      listen_where="$file_item"
      file_basename="${file_item##*/}"
      file_name=${file_item//\//\_}
   fi

   echo "\
## Copyright (C) 2018 
## See the file COPYING for copying conditions.

## $generated_comment

[Unit]
Description=redirect $listen_where to Whonix-Gateway port ${destination_port}
Documentation=https://github.com/eyedeekay/i2p-torbrowser-sockets-workaround
ConditionPathExists=!/var/run/qubes/this-is-templatevm

[Socket]
ListenStream=$listen_where
SocketUser=i2psvc
SocketMode=666
DirectoryMode=2755

[Install]
WantedBy=sockets.target" > "./lib/systemd/system/i2p-torbrowser-sockets-workaround_autogen_${file_name}.socket"

   echo "\
## Copyright (C) 2018 
## See the file COPYING for copying conditions.

## $generated_comment

[Unit]
Description=redirect $listen_where to Whonix-Gateway port ${destination_port}
Documentation=https://github.com/eyedeekay/i2p-torbrowser-sockets-workaround
ConditionPathExists=!/var/run/qubes/this-is-templatevm
After=i2p-torbrowser-sockets-workaround_autogen_${file_name}.socket
Requires=i2p-torbrowser-sockets-workaround_autogen_${file_name}.socket

[Service]
ExecStart=/lib/systemd/systemd-socket-proxyd $destination_where
PrivateTmp=yes" > "./lib/systemd/system/i2p-torbrowser-sockets-workaround_autogen_${file_name}.service"

   if [ "$system_run" = "true" ]; then
      systemctl --system daemon-reload
      systemctl enable "i2p-torbrowser-sockets-workaround_autogen_${file_name}.socket"
      systemctl start "i2p-torbrowser-sockets-workaround_autogen_${file_name}.socket"
   fi

   ## Append lintian override for each auto generated systemd unit file.
   echo "\
i2p-torbrowser-sockets-workaround: systemd-service-file-missing-install-key lib/systemd/system/i2p-torbrowser-sockets-workaround_autogen_${file_name}.service" >> ./usr/share/lintian/overrides/i2p-torbrowser-sockets-workaround

done
